/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ–¥–∏–∑–∞–π–Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Ñ–æ–∫—É—Å–æ–º –Ω–∞ —ç—Å—Ç–µ—Ç–∏–∫—É
 * –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ—Å–ª–µ notification.js
 */

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showAllNotificationTypes() {
    // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showNotification('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º –¥–∏–∑–∞–π–Ω–æ–º', 'info', 5000, true, {
        animation: 'fade'
    });
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
    setTimeout(() => {
        showNotification('–û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!', 'success', 5000, true, {
            animation: 'bounce'
        });
    }, 1000);
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    setTimeout(() => {
        showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏', 'error', 5000, true, {
            animation: 'shake'
        });
    }, 2000);
    
    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    setTimeout(() => {
        showNotification('–í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–æ –≤–∞–∂–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', 'warning', 5000, true, {
            animation: 'zoom'
        });
    }, 3000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π
function showAnimationExamples() {
    // –ê–Ω–∏–º–∞—Ü–∏—è bounce
    showNotification('–ü—Ä—É–∂–∏–Ω–∏—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è "bounce"', 'info', 5000, true, {
        animation: 'bounce',
        position: 'top-right'
    });
    
    // –ê–Ω–∏–º–∞—Ü–∏—è fade
    setTimeout(() => {
        showNotification('–ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è "fade"', 'info', 5000, true, {
            animation: 'fade',
            position: 'top-right'
        });
    }, 700);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è shake
    setTimeout(() => {
        showNotification('–ê–Ω–∏–º–∞—Ü–∏—è —Ç—Ä—è—Å–∫–∏ "shake"', 'info', 5000, true, {
            animation: 'shake',
            position: 'top-right'
        });
    }, 1400);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è pulse
    setTimeout(() => {
        showNotification('–ê–Ω–∏–º–∞—Ü–∏—è –ø—É–ª—å—Å–∞—Ü–∏–∏ "pulse"', 'info', 5000, true, {
            animation: 'pulse',
            position: 'top-right'
        });
    }, 2100);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è flip
    setTimeout(() => {
        showNotification('–ê–Ω–∏–º–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ "flip"', 'info', 5000, true, {
            animation: 'flip',
            position: 'top-right'
        });
    }, 2800);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è zoom
    setTimeout(() => {
        showNotification('–ê–Ω–∏–º–∞—Ü–∏—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è "zoom"', 'info', 5000, true, {
            animation: 'zoom',
            position: 'top-right'
        });
    }, 3500);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è glitch –¥–ª—è –æ—à–∏–±–æ–∫
    setTimeout(() => {
        showNotification('–ì–ª—é–∫-—ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—à–∏–±–æ–∫ "glitch"', 'error', 5000, true, {
            animation: 'glitch',
            position: 'top-right'
        });
    }, 4200);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
function showPositionExamples() {
    // –í–µ—Ä—Ö–Ω–∏–π –ø—Ä–∞–≤—ã–π —É–≥–æ–ª (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    showNotification('–í–µ—Ä—Ö–Ω–∏–π –ø—Ä–∞–≤—ã–π —É–≥–æ–ª (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)', 'info', 8000, true, {
        position: 'top-right',
        theme: 'gradient'
    });
    
    // –í–µ—Ä—Ö–Ω–∏–π –ª–µ–≤—ã–π —É–≥–æ–ª
    setTimeout(() => {
        showNotification('–í–µ—Ä—Ö–Ω–∏–π –ª–µ–≤—ã–π —É–≥–æ–ª', 'success', 8000, true, {
            position: 'top-left',
            theme: 'gradient'
        });
    }, 500);
    
    // –í–µ—Ä—Ö–Ω–∏–π —Ü–µ–Ω—Ç—Ä
    setTimeout(() => {
        showNotification('–í–µ—Ä—Ö–Ω–∏–π —Ü–µ–Ω—Ç—Ä', 'warning', 8000, true, {
            position: 'top-center',
            theme: 'gradient'
        });
    }, 1000);
    
    // –ù–∏–∂–Ω–∏–π –ø—Ä–∞–≤—ã–π —É–≥–æ–ª
    setTimeout(() => {
        showNotification('–ù–∏–∂–Ω–∏–π –ø—Ä–∞–≤—ã–π —É–≥–æ–ª', 'error', 8000, true, {
            position: 'bottom-right',
            theme: 'gradient'
        });
    }, 1500);
    
    // –ù–∏–∂–Ω–∏–π –ª–µ–≤—ã–π —É–≥–æ–ª
    setTimeout(() => {
        showNotification('–ù–∏–∂–Ω–∏–π –ª–µ–≤—ã–π —É–≥–æ–ª', 'info', 8000, true, {
            position: 'bottom-left',
            theme: 'gradient'
        });
    }, 2000);
    
    // –ù–∏–∂–Ω–∏–π —Ü–µ–Ω—Ç—Ä
    setTimeout(() => {
        showNotification('–ù–∏–∂–Ω–∏–π —Ü–µ–Ω—Ç—Ä', 'success', 8000, true, {
            position: 'bottom-center',
            theme: 'gradient'
        });
    }, 2500);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–µ–º
function showThemeExamples() {
    // –¢–µ–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Å–≤–µ—Ç–ª–∞—è)
    showNotification('–¢–µ–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—Å–≤–µ—Ç–ª–∞—è)', 'info', 8000, true);
    
    // –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
    setTimeout(() => {
        showNotification('–¢–µ–º–Ω–∞—è —Ç–µ–º–∞', 'info', 8000, true, {
            theme: 'dark'
        });
    }, 1000);
    
    // –°—Ç–µ–∫–ª—è–Ω–Ω–∞—è —Ç–µ–º–∞
    setTimeout(() => {
        showNotification('–°—Ç–µ–∫–ª—è–Ω–Ω–∞—è —Ç–µ–º–∞', 'info', 8000, true, {
            theme: 'glass'
        });
    }, 2000);
    
    // –ù–µ–æ–Ω–æ–≤–∞—è —Ç–µ–º–∞
    setTimeout(() => {
        showNotification('–ù–µ–æ–Ω–æ–≤–∞—è —Ç–µ–º–∞', 'info', 8000, true, {
            theme: 'neon'
        });
    }, 3000);
    
    // –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω–∞—è —Ç–µ–º–∞
    setTimeout(() => {
        showNotification('–ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω–∞—è —Ç–µ–º–∞', 'info', 8000, true, {
            theme: 'gradient'
        });
    }, 4000);
    
    // –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ç–µ–º–∞
    setTimeout(() => {
        showNotification('–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —Ç–µ–º–∞', 'info', 8000, true, {
            theme: 'minimal'
        });
    }, 5000);
    
    // –¢–µ–º–∞ "—Ä–∞–∑–º—ã—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞" (–Ω–æ–≤–∞—è)
    setTimeout(() => {
        showNotification('–ù–æ–≤–∞—è —Ç–µ–º–∞ "—Ä–∞–∑–º—ã—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞"', 'info', 8000, true, {
            theme: 'blurred-card'
        });
    }, 6000);
    
    // –¢–µ–º–∞ "soft-ui" (–Ω–æ–≤–∞—è)
    setTimeout(() => {
        showNotification('–ù–æ–≤–∞—è —Ç–µ–º–∞ "soft-ui"', 'info', 8000, true, {
            theme: 'soft-ui'
        });
    }, 7000);
    
    // –¢–µ–º–∞ "frosted" (–Ω–æ–≤–∞—è)
    setTimeout(() => {
        showNotification('–ù–æ–≤–∞—è —Ç–µ–º–∞ "frosted"', 'info', 8000, true, {
            theme: 'frosted'
        });
    }, 8000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —ç–º–æ–¥–∑–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function showEmojiAndImageExamples() {
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏
    showNotification('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏ –≤–º–µ—Å—Ç–æ –∏–∫–æ–Ω–∫–∏', 'info', 5000, true, {
        emoji: 'üöÄ',
        theme: 'blurred-card'
    });
    
    // –ï—â–µ –ø—Ä–∏–º–µ—Ä—ã —Å —ç–º–æ–¥–∑–∏
    setTimeout(() => {
        showNotification('–£—Å–ø–µ—à–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ!', 'success', 5000, true, {
            emoji: '‚úÖ',
            theme: 'glass'
        });
    }, 1000);
    
    setTimeout(() => {
        showNotification('–û—à–∏–±–∫–∞!', 'error', 5000, true, {
            emoji: '‚ùå',
            theme: 'frosted'
        });
    }, 2000);
    
    setTimeout(() => {
        showNotification('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!', 'warning', 5000, true, {
            emoji: '‚ö†Ô∏è',
            theme: 'neon'
        });
    }, 3000);
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    setTimeout(() => {
        showNotification('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º', 'info', 5000, true, {
            imageUrl: 'https://via.placeholder.com/50',
            theme: 'soft-ui'
        });
    }, 4000);
    
    // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–º–æ–¥–∑–∏ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –ø–∞—Ä–µ–Ω–∏—è
    setTimeout(() => {
        showNotification('–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —ç–º–æ–¥–∑–∏ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º –ø–∞—Ä–µ–Ω–∏—è', 'success', 5000, true, {
            emoji: 'üéà',
            animation: 'zoom',
            theme: 'gradient'
        });
    }, 5000);
}

/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∫–ª–∏–∫–æ–≤
 */
function showInteractiveExamples() {
    // –ü—Ä–æ—Å—Ç–æ–µ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    let basicClickableNotification = showNotification(
        '–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', 
        'info', 
        8000,
        true, 
        {
            animation: 'slide',
            emoji: 'üë§',
            theme: 'glass',
            onClick: function(event, notification) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                showNotification(
                    '–ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...', 
                    'success',
                    3000,
                    true, 
                    {
                        animation: 'zoom'
                    }
                );
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                notification.close();
                
                // –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø—Ä–æ—Ñ–∏–ª—é (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥)
                if (typeof window.showProfileModal === 'function') {
                    setTimeout(() => window.showProfileModal(), 500);
                }
            }
        }
    );
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–µ–π—Å—Ç–≤–∏—è
    setTimeout(() => {
        showNotification(
            '–î–æ—Å—Ç—É–ø–Ω–æ –Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã', 
            'info', 
            10000,
            true, 
            {
                animation: 'slide',
                customIcon: 'download',
                theme: 'blurred-card',
                actionText: '–û–±–Ω–æ–≤–∏—Ç—å —Å–µ–π—á–∞—Å',
                onClick: function(event, notification) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    const updateNotification = showNotification(
                        '–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...', 
                        'info',
                        0, // –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                        true, 
                        {
                            animation: 'fade',
                            customIcon: 'sync'
                        }
                    );
                    
                    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
                    let progress = 0;
                    const interval = setInterval(() => {
                        progress += 20;
                        if (progress <= 100) {
                            updateNotification.update(`–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è... ${progress}%`);
                        } else {
                            clearInterval(interval);
                            
                            // –ú–µ–Ω—è–µ–º —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ —É—Å–ø–µ—à–Ω—ã–π
                            updateNotification.setType('success');
                            updateNotification.update('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
                            
                            // –ó–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                            setTimeout(() => updateNotification.close(), 3000);
                        }
                    }, 800);
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    notification.close();
                }
            }
        );
    }, 1500);
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç—å—é
    setTimeout(() => {
        showNotification(
            '–£ –≤–∞—Å 3 –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è', 
            'info', 
            7000,
            true, 
            {
                animation: 'bounce',
                customIcon: 'envelope',
                theme: 'gradient',
                clickablePart: 'all', // –≤–µ—Å—å –±–ª–æ–∫ –∫–ª–∏–∫–∞–±–µ–ª–µ–Ω
                onClick: function(event, notification) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–π
                    showNotification(
                        '–û—Ç–∫—Ä—ã–≤–∞—é —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π...', 
                        'success',
                        3000,
                        true, 
                        {
                            animation: 'fade'
                        }
                    );
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    notification.close();
                }
            }
        );
    }, 3000);
    
    // –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
    setTimeout(() => {
        const confirmationNotification = showNotification(
            '–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º?', 
            'warning', 
            0, // –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            false, 
            {
                animation: 'slide',
                theme: 'soft-ui',
                actionText: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏',
                onClick: function(event, notification) {
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                    const savingNotification = showNotification(
                        '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π...', 
                        'info',
                        0, // –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                        true, 
                        {
                            animation: 'fade',
                            customIcon: 'save'
                        }
                    );
                    
                    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                    setTimeout(() => {
                        savingNotification.setType('success');
                        savingNotification.update('–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
                        
                        // –ó–∞–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                        setTimeout(() => savingNotification.close(), 2000);
                    }, 1500);
                    
                    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
                    notification.close();
                }
            }
        );
        
        // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
        setTimeout(() => {
            // –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            confirmationNotification.update('–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º?<br><span style="font-size: 12px; opacity: 0.8;">–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è</span>');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            confirmationNotification.setOnClick(function(event, notification) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                showNotification(
                    '–í—ã—Ö–æ–¥ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π', 
                    'info',
                    3000,
                    true, 
                    {
                        animation: 'fade'
                    }
                );
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
                notification.close();
            });
        }, 1000);
    }, 5000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –¥–∏–∑–∞–π–Ω–∞
function showCreativeExamples() {
    // –ù–µ–æ–Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏–µ–π
    showNotification('–ù–µ–æ–Ω + —ç–º–æ–¥–∑–∏ + –ø—É–ª—å—Å–∞—Ü–∏—è', 'info', 8000, true, {
        theme: 'neon',
        emoji: 'üîÆ',
        animation: 'pulse'
    });
    
    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –∏–∫–æ–Ω–∫–æ–π –≤ —Å—Ç–∏–ª–µ soft-ui
    setTimeout(() => {
        showNotification('Soft-UI + –∫–∞—Å—Ç–æ–º–Ω–∞—è –∏–∫–æ–Ω–∫–∞', 'info', 8000, true, {
            customIcon: 'magic',
            theme: 'soft-ui'
        });
    }, 1000);
    
    // Gradient + shake + custom class
    setTimeout(() => {
        showNotification('–ì—Ä–∞–¥–∏–µ–Ω—Ç + —Ç—Ä—è—Å–∫–∞ + –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–ª–∞—Å—Å', 'info', 8000, true, {
            customClass: 'my-custom-notification',
            theme: 'gradient',
            animation: 'shake'
        });
    }, 2000);
    
    // Glass + emoji + zoom
    setTimeout(() => {
        showNotification('–°—Ç–µ–∫–ª–æ + —ç–º–æ–¥–∑–∏ + —É–≤–µ–ª–∏—á–µ–Ω–∏–µ', 'success', 8000, true, {
            theme: 'glass',
            emoji: 'üéâ',
            animation: 'zoom',
            position: 'bottom-center'
        });
    }, 3000);
    
    // Success + confetti + gradient
    setTimeout(() => {
        showNotification('–£—Å–ø–µ—Ö + –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ + –≥—Ä–∞–¥–∏–µ–Ω—Ç', 'success', 8000, true, {
            showConfetti: true,
            animation: 'bounce',
            theme: 'gradient'
        });
    }, 4000);
    
    // Error + glitch + neon
    setTimeout(() => {
        showNotification('–û—à–∏–±–∫–∞ + –≥–ª–∏—Ç—á + –Ω–µ–æ–Ω', 'error', 8000, true, {
            animation: 'glitch',
            theme: 'neon'
        });
    }, 5000);
    
    // Blurred-card + sound + zoom + emoji
    setTimeout(() => {
        showNotification('–†–∞–∑–º—ã—Ç–∏–µ + –∑–≤—É–∫ + –∑—É–º + —ç–º–æ–¥–∑–∏', 'info', 8000, true, {
            useSound: true,
            soundName: 'notification',
            animation: 'zoom',
            emoji: 'üîî',
            theme: 'blurred-card'
        });
    }, 6000);
}

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—å—Ç—Ä–∞—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
function showEestheticEffects() {
    // –≠—Ñ—Ñ–µ–∫—Ç 1: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–∞—É-—ç—Ñ—Ñ–µ–∫—Ç
    showNotification('–ü–æ—Ç—Ä—è—Å–∞—é—â–µ –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', 'success', 5000, true, {
        theme: 'neon',
        animation: 'zoom',
        showConfetti: true,
        emoji: '‚ú®',
        position: 'top-center'
    });
    
    // –≠—Ñ—Ñ–µ–∫—Ç 2: –ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —ç—Å—Ç–µ—Ç–∏–∫–∞
    setTimeout(() => {
        showNotification('–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è —ç—Å—Ç–µ—Ç–∏–∫–∞', 'info', 5000, true, {
            theme: 'minimal',
            animation: 'fade',
            position: 'top-right',
            customIcon: 'feather'
        });
    }, 1500);
    
    // –≠—Ñ—Ñ–µ–∫—Ç 3: –î—Ä–∞–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    setTimeout(() => {
        showNotification('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞!', 'error', 5000, true, {
            animation: 'glitch',
            theme: 'dark',
            position: 'top-center',
            customIcon: 'skull-crossbones'
        });
    }, 3000);
    
    // –≠—Ñ—Ñ–µ–∫—Ç 4: Soft-UI —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º —Ñ–æ–Ω–æ–º
    setTimeout(() => {
        showNotification('–ù–µ–π–º–æ—Ä—Ñ–∏–∑–º –∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã', 'info', 5000, true, {
            theme: 'soft-ui',
            animation: 'bounce',
            position: 'bottom-right',
            customIcon: 'paint-brush'
        });
    }, 4500);
    
    // –≠—Ñ—Ñ–µ–∫—Ç 5: Frosted glass —ç—Ñ—Ñ–µ–∫—Ç
    setTimeout(() => {
        showNotification('–ú–æ—Ä–æ–∑–Ω–æ–µ —Å—Ç–µ–∫–ª–æ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º blur', 'success', 5000, true, {
            theme: 'frosted',
            animation: 'flip',
            customIcon: 'snowflake',
            showConfetti: true
        });
    }, 6000);
    
    // –≠—Ñ—Ñ–µ–∫—Ç 6: Blurred-card —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –∏–∫–æ–Ω–∫–æ–π
    setTimeout(() => {
        showNotification('–†–∞–∑–º—ã—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π', 'warning', 5000, true, {
            theme: 'blurred-card',
            animation: 'pulse',
            customIcon: 'lightbulb'
        });
    }, 7500);
    
    // –≠—Ñ—Ñ–µ–∫—Ç 7: –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    setTimeout(() => {
        const notification = showNotification('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...', 'info', 12000, true, {
            theme: 'glass',
            animation: 'bounce',
            position: 'bottom-center',
            customIcon: 'spinner fa-spin'
        });
        
        setTimeout(() => {
            notification.update('–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö: 50% –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
            notification.pulse();
        }, 3000);
        
        setTimeout(() => {
            notification.setType('success');
            notification.update('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!');
            notification.shake();
            
            setTimeout(() => {
                showNotification('–í—Å—ë –≥–æ—Ç–æ–≤–æ!', 'success', 4000, true, {
                    showConfetti: true,
                    position: 'bottom-center',
                    animation: 'zoom',
                    theme: 'gradient'
                });
            }, 1000);
        }, 6000);
    }, 9000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ–º–æ-–ø–∞–Ω–µ–ª–∏ (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
function createDemoPanel() {
    const panel = document.createElement('div');
    panel.className = 'notification-demo-panel';
    panel.style.cssText = `
        position: fixed;
        bottom: 20px;
        left: 20px;
        background: rgba(255, 255, 255, 0.8);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border-radius: 16px;
        padding: 20px;
        box-shadow: 
            0 10px 30px rgba(0, 0, 0, 0.1),
            0 1px 1px rgba(0, 0, 0, 0.05),
            inset 0 0 0 1px rgba(255, 255, 255, 0.7);
        z-index: 9999;
        display: flex;
        flex-direction: column;
        gap: 12px;
    `;
    
    const buttons = [
        { text: '–¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', action: showAllNotificationTypes },
        { text: '–ê–Ω–∏–º–∞—Ü–∏–∏', action: showAnimationExamples },
        { text: '–ü–æ–∑–∏—Ü–∏–∏', action: showPositionExamples },
        { text: '–¢–µ–º—ã', action: showThemeExamples },
        { text: '–≠–º–æ–¥–∑–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', action: showEmojiAndImageExamples },
        { text: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ', action: showInteractiveExamples },
        { text: '–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏', action: showCreativeExamples },
        { text: '–≠—Å—Ç–µ—Ç–∏—á–µ—Å–∫–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã', action: showEestheticEffects }
    ];
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞–Ω–µ–ª–∏
    const title = document.createElement('h3');
    title.textContent = '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π';
    title.style.cssText = `
        margin: 0 0 10px 0;
        font-size: 16px;
        font-weight: 600;
        color: #333;
        font-family: 'Inter', 'Segoe UI', sans-serif;
    `;
    panel.appendChild(title);
    
    buttons.forEach(btn => {
        const button = document.createElement('button');
        button.textContent = btn.text;
        button.style.cssText = `
            padding: 10px 16px;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.8), rgba(250, 250, 255, 0.9));
            color: #333;
            border: none;
            border-radius: 12px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            font-family: 'Inter', 'Segoe UI', sans-serif;
            transition: all 0.3s ease;
            box-shadow: 
                0 2px 10px rgba(0, 0, 0, 0.05),
                0 1px 1px rgba(0, 0, 0, 0.03),
                inset 0 0 0 1px rgba(255, 255, 255, 0.7);
        `;
        button.addEventListener('mouseenter', () => {
            button.style.transform = 'translateY(-2px)';
            button.style.boxShadow = `
                0 6px 15px rgba(0, 0, 0, 0.08),
                0 2px 5px rgba(0, 0, 0, 0.04),
                inset 0 0 0 1px rgba(255, 255, 255, 0.9)
            `;
            button.style.background = 'linear-gradient(135deg, rgba(255, 255, 255, 0.9), rgba(250, 250, 255, 1))';
        });
        button.addEventListener('mouseleave', () => {
            button.style.transform = 'translateY(0)';
            button.style.boxShadow = `
                0 2px 10px rgba(0, 0, 0, 0.05),
                0 1px 1px rgba(0, 0, 0, 0.03),
                inset 0 0 0 1px rgba(255, 255, 255, 0.7)
            `;
            button.style.background = 'linear-gradient(135deg, rgba(255, 255, 255, 0.8), rgba(250, 250, 255, 0.9))';
        });
        button.addEventListener('click', btn.action);
        panel.appendChild(button);
    });
    
    document.body.appendChild(panel);
    
    // –î–µ–ª–∞–µ–º –ø–∞–Ω–µ–ª—å –ø–µ—Ä–µ–º–µ—â–∞–µ–º–æ–π
    let isDragging = false;
    let dragStartX, dragStartY;
    let initialX, initialY;
    
    title.style.cursor = 'grab';
    
    title.addEventListener('mousedown', (e) => {
        isDragging = true;
        dragStartX = e.clientX;
        dragStartY = e.clientY;
        initialX = panel.offsetLeft;
        initialY = panel.offsetTop;
        title.style.cursor = 'grabbing';
    });
    
    document.addEventListener('mousemove', (e) => {
        if (isDragging) {
            const dx = e.clientX - dragStartX;
            const dy = e.clientY - dragStartY;
            panel.style.left = initialX + dx + 'px';
            panel.style.top = initialY + dy + 'px';
            panel.style.bottom = 'auto';
        }
    });
    
    document.addEventListener('mouseup', () => {
        isDragging = false;
        title.style.cursor = 'grab';
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
    const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
    const updatePanelColors = (isDarkMode) => {
        if (isDarkMode) {
            panel.style.background = 'rgba(30, 30, 40, 0.8)';
            panel.style.boxShadow = `
                0 10px 30px rgba(0, 0, 0, 0.2),
                0 1px 1px rgba(0, 0, 0, 0.1),
                inset 0 0 0 1px rgba(255, 255, 255, 0.1)
            `;
            title.style.color = '#e0e0e0';
            
            buttons.forEach((_, index) => {
                const btn = panel.querySelectorAll('button')[index];
                btn.style.background = 'linear-gradient(135deg, rgba(50, 50, 60, 0.8), rgba(40, 40, 50, 0.9))';
                btn.style.color = '#e0e0e0';
                btn.style.boxShadow = `
                    0 2px 10px rgba(0, 0, 0, 0.15),
                    0 1px 1px rgba(0, 0, 0, 0.1),
                    inset 0 0 0 1px rgba(255, 255, 255, 0.1)
                `;
                
                btn.addEventListener('mouseenter', () => {
                    btn.style.background = 'linear-gradient(135deg, rgba(60, 60, 70, 0.9), rgba(50, 50, 60, 1))';
                    btn.style.boxShadow = `
                        0 6px 15px rgba(0, 0, 0, 0.2),
                        0 2px 5px rgba(0, 0, 0, 0.15),
                        inset 0 0 0 1px rgba(255, 255, 255, 0.15)
                    `;
                });
                
                btn.addEventListener('mouseleave', () => {
                    btn.style.background = 'linear-gradient(135deg, rgba(50, 50, 60, 0.8), rgba(40, 40, 50, 0.9))';
                    btn.style.boxShadow = `
                        0 2px 10px rgba(0, 0, 0, 0.15),
                        0 1px 1px rgba(0, 0, 0, 0.1),
                        inset 0 0 0 1px rgba(255, 255, 255, 0.1)
                    `;
                });
            });
        }
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Ç–µ–º—É
    updatePanelColors(darkModeMediaQuery.matches);
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
    darkModeMediaQuery.addEventListener('change', (e) => {
        updatePanelColors(e.matches);
    });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥–∏–º –∑–∞ –∫–ª–∞—Å—Å–æ–º body –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
            if (mutation.attributeName === 'class') {
                const isDarkMode = document.body.classList.contains('dark');
                updatePanelColors(isDarkMode);
            }
        });
    });
    
    observer.observe(document.body, { attributes: true });
    
    return panel;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
window.showAllNotificationTypes = showAllNotificationTypes;
window.showAnimationExamples = showAnimationExamples;
window.showPositionExamples = showPositionExamples;
window.showThemeExamples = showThemeExamples;
window.showEmojiAndImageExamples = showEmojiAndImageExamples;
window.showInteractiveExamples = showInteractiveExamples;
window.showCreativeExamples = showCreativeExamples;
window.showEestheticEffects = showEestheticEffects;
window.createDemoPanel = createDemoPanel; 